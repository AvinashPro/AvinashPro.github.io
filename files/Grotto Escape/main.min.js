const canvas=document.getElementById("game"),ctx=canvas.getContext("2d");let homeScreen,gameOverScreen,winScreen;canvas.width=innerWidth,canvas.height=innerHeight;class ParallaxBackground{constructor(t){this.layers=t,this.dir="left",this.w=canvas.width,canvas.width<canvas.height?this.h=300:this.h=canvas.height,this.y=(canvas.height-this.h)/2}draw(){this.layers.forEach(((t,e)=>{null==this.layers[e].pos&&(this.layers[e].pos=[],this.layers[e].pos[0]=new Vector(0,this.y),this.layers[e].pos[1]=new Vector(this.layers[e].pos[0].x-this.w,this.y),this.layers[e].pos[2]=new Vector(this.layers[e].pos[0].x+this.w,this.y)),ctx.drawImage(t.img,0,0,t.img.width,t.img.height,this.layers[e].pos[0].x,this.layers[e].pos[0].y,this.w,this.h),ctx.drawImage(t.img,0,0,t.img.width,t.img.height,this.layers[e].pos[1].x,this.layers[e].pos[1].y,this.w,this.h),ctx.drawImage(t.img,0,0,t.img.width,t.img.height,this.layers[e].pos[2].x,this.layers[e].pos[2].y,this.w,this.h),"left"==this.dir?(this.layers[e].pos[0].x-=t.speed,this.layers[e].pos[1].x-=t.speed,this.layers[e].pos[2].x-=t.speed,this.layers[e].pos[0].x<-this.w&&(this.layers[e].pos[0].x=0),this.layers[e].pos[1].x=this.layers[e].pos[0].x-this.w,this.layers[e].pos[2].x=this.layers[e].pos[0].x+this.w):"right"==this.dir&&(this.layers[e].pos[0].x+=t.speed,this.layers[e].pos[1].x+=t.speed,this.layers[e].pos[0].x>this.w&&(this.layers[e].pos[0].x=0),this.layers[e].pos[1].x=this.layers[e].pos[0].x-this.w,this.layers[e].pos[2].x=this.layers[e].pos[0].x+this.w)}))}update(){this.draw(),this.resize()}resize(){this.w=canvas.width,canvas.width<canvas.height?this.h=300:this.h=canvas.height,this.y=(canvas.height-this.h)/2,this.layers.forEach(((t,e)=>{this.layers[e].pos[0].y=this.y,this.layers[e].pos[1].y=this.y,this.layers[e].pos[2].y=this.y}))}}class Preloader{constructor(){this.__assets__=new Object}handleLoadingScreen(){let t=document.getElementById("loadingBar"),e=document.getElementById("loadingPercent"),i=document.getElementById("loadingText"),s=document.getElementById("loadingScreen"),o=document.getElementById("start");t.style.width="100%",e.innerHTML="100%",i.innerHTML="Loaded!",o.style.display="block",s.addEventListener("click",(()=>{s.style.display="none",showHomeScreen(),document.body.requestFullscreen()}))}handleFailedToLoadScreen(){console.error("Failed! to load resources")}load(t){if(0==Object.keys(t).length)this.handleLoadingScreen();else{let e=document.getElementById("loadingBar"),i=document.getElementById("loadingPercent");this.__assets__=t;let s=[],o=0;for(let e in t){let{url:i,type:o}=t[e];"img"==o?s.push(this.loadImage(i)):"audio"==o?s.push(this.loadAudio(i)):"json"==o&&s.push(this.loadJSON(i))}s.forEach(((t,s)=>{t.then((t=>{let n=Object.keys(this.__assets__)[s];this.__assets__[n].value=t,o++,e.style.width=o/Object.keys(this.__assets__).length*100+"%",i.innerHTML=Math.round(o/Object.keys(this.__assets__).length*100)+"%",o!=Object.keys(this.__assets__).length||this.handleLoadingScreen()})).catch((()=>{this.handleFailedToLoadScreen()}))}))}}loadImage(t){return new Promise(((e,i)=>{let s=new Image;s.src=t,s.onload=()=>{e(s)},s.onerror=()=>{i()}}))}loadAudio(t){return new Promise(((e,i)=>{let s=new Audio;s.src=t,s.oncanplay=()=>{e(s)},s.onerror=()=>{i()}}))}loadJSON(t){return new Promise(((e,i)=>{fetch(t).then((t=>{e(t.json())})).catch((()=>{i()}))}))}get(t){return this.__assets__[t].value}}function ld_resources(){assets=new Preloader,assets.load({tileset:{url:"assets/img/infinity.png",type:"img"},tilemap:{url:"assets/json/tilemap1.json",type:"json"},player:{url:"assets/img/player.png",type:"img"},enemies:{url:"assets/img/enemies.png",type:"img"},items:{url:"assets/img/items.png",type:"img"},jumpSound:{url:"assets/sound/jump.wav",type:"audio"},h01:{url:"assets/img/homeBg/01.png",type:"img"},h02:{url:"assets/img/homeBg/02.png",type:"img"},h03:{url:"assets/img/homeBg/03.png",type:"img"},homeMusic:{url:"assets/sound/homeBgMusic.mp3",type:"audio"},bgMusic:{url:"assets/sound/backgroundMusic.mp3",type:"audio"}})}function showHomeScreen(){homeScreen=!0,assets.get("homeMusic").play(),assets.get("homeMusic").loop=!0,homeBgData=[{img:assets.get("h01"),speed:.4},{img:assets.get("h02"),speed:.7},{img:assets.get("h03"),speed:1}],homeBg=new ParallaxBackground(homeBgData),gameLoop("homeBg")}onload=ld_resources,document.getElementById("play").addEventListener("click",(()=>{assets.get("homeMusic").pause(),document.getElementById("homeScreen").style.display="none",homeScreen=!1,document.getElementById("controller").style.display="block",document.getElementById("fpsCont").style.display="block",cancelAnimationFrame(animID),main()})),document.getElementById("hop").addEventListener("click",(()=>{swal({title:"How to play",text:"Use WASD or arrow controls for PC and touch controller for mobile.\n\nW => Jump\nA => Left\nD => Right",button:"Close"})})),document.getElementById("about").addEventListener("click",(()=>{swal({title:"About",text:"Heys guys, I'm Avinash, so this is my first fully functional game written purely in JavaScript. It uses HTML5 canvas element for rendering of graphics. I hope you'll like it. Any feedbacks are appreciated.\nThanks!\n\nContact me:\nGithub: https://github.com/AvinashPro\nTelegram: https://t.me/spicoder",button:"Close"})}));class Tilemap{constructor(t,e,i,s){this.tile=t,this.data=e,this.img=i,this.imgProperty=s,this.collMap=[],this.collidableTiles=[1,2,3,4,7,8,16,17,18,19,27,28,29,30,34,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52],this.rowIndex=0,this.columnIndex=0}init(){for(let t=0;t<this.data.length;t++){let e=[];for(let i=0;i<this.data[0].length;i++){let s,o=this.data[t][i];for(let t in tilesProperty)t==o&&(s=o);let n=tilesProperty[s];null==s||null==n.collide?e.push(0):e.push(getCollisionVal(n.collide))}this.collMap.push(e)}}draw(){for(let t=0;t<this.tile.h*this.data.length;t+=this.tile.h)for(let e=0;e<this.tile.w*this.data[0].length;e+=this.tile.w){let i=this.data[this.rowIndex][this.columnIndex]-1,s=.5,o=this.img.width/this.imgProperty.column,n=this.img.height/this.imgProperty.row,h=Math.floor(i%this.imgProperty.column)*o,l=Math.floor(i/this.imgProperty.column)*n,a=32;e>camera.pos.x-canvas.width/2-a&&e<camera.pos.x+canvas.width/2+a&&t>camera.pos.y-canvas.height/2-a&&t<camera.pos.y+canvas.height/2+a&&ctx.drawImage(this.img,h,l,o,n,e-s/2,t-s/2,this.tile.w+s,this.tile.h+s),this.columnIndex++,this.columnIndex==this.data[0].length&&(this.rowIndex++,this.columnIndex=0),this.rowIndex==this.data.length&&(this.rowIndex=0)}}update(){this.draw()}}class Vector{constructor(t,e){this.x=t,this.y=e}add(t){return new Vector(this.x+t.x,this.y+t.y)}sub(t){return new Vector(this.x-t.x,this.y-t.y)}mult(t){return new Vector(this.x*t,this.y*t)}lerp(t,e){return this.add(t.pos.sub(this).mult(e))}static dist(t,e){return t.sub(e).mag()}mag(){return Math.hypot(this.x,this.y)}}class Camera{constructor(t,e){this.pos=new Vector(t,e),this.target=null,this.val=1,this.offSet=new Vector(0,0)}follow(t,e=0){this.target=t,this.offSet=e}update(){this.target&&(Vector.dist(this.pos,this.target.pos)<1&&(this.pos=this.target.pos),this.pos=this.pos.lerp(this.target,.05),this.pos.x=Math.floor(this.pos.x),this.pos.y=Math.floor(this.pos.y))}}class Sprite{constructor(t,e,i,s,o,n,h,l){this.pos=t,this.w=e,this.h=i,this.hitbox=s,this.sprite=o,this.anim=n,this.spriteColumnCount=h,this.spriteRowCount=l,this.orientation=1}animation(){let t=this.anim[this.anim.currentState];this.anim.currentFrame=t[this.anim.currentIndex],this.anim.currentIndex++,this.anim.currentIndex>=t.length&&(this.anim.currentIndex=0)}animationHandler(t){this.anim.elapsedTime+=t,this.anim.elapsedTime>this.anim.dur&&(this.animation(),this.anim.elapsedTime=0)}draw(){ctx.save(),1==this.orientation?ctx.translate(0,0):(this.orientation=-1)&&ctx.translate(2*this.pos.x+this.w,0),ctx.scale(this.orientation,1),ctx.drawImage(this.sprite,Math.floor((this.anim.currentFrame-1)%this.spriteColumnCount)*(this.sprite.width/this.spriteColumnCount),Math.floor((this.anim.currentFrame-1)/this.spriteColumnCount)*(this.sprite.height/this.spriteRowCount),this.sprite.width/this.spriteColumnCount,this.sprite.height/this.spriteRowCount,this.pos.x,this.pos.y,this.w,this.h),ctx.restore()}}class Mover extends Sprite{constructor(t,e,i,s,o,n,h,l,a){super(t,e,i,o,n,h,l,a),this.vel=s,this.old=new Vector(0,0)}updateOldPos(){this.old.x=this.pos.x,this.old.y=this.pos.y}wallCollision(){this.pos.x+this.hitbox.p1.x<0?(this.vel.x=0,this.pos.x=-this.hitbox.p1.x):this.pos.x+this.w>tw*mc&&(this.vel.x=0,this.pos.x=tw*mc-this.w),this.pos.y<0?(this.vel.y=0,this.pos.y=0):this.pos.y+this.h>th*mr&&(this.vel.y=0,this.pos.y=th*mr-this.h)}getCurrentTile(t,e){return{minColumn:Math.floor(this.pos.x/t),maxColumn:Math.floor((this.pos.x+this.w)/t),minRow:Math.floor(this.pos.y/e),maxRow:Math.floor((this.pos.y+this.h)/e)}}getCurrentTilePos(t,e){let i=this.getCurrentTile(t,e);return{minX:i.minColumn*t,maxX:i.maxColumn*t,minY:i.minRow*e,maxY:i.maxRow*e}}getCurrentTileVal(t,e,i){let s=this.getCurrentTile(t,e);return{tl:i[s.minRow][s.minColumn],tr:i[s.minRow][s.maxColumn],bl:i[s.maxRow][s.minColumn],br:i[s.maxRow][s.maxColumn]}}collideTop(t,e,i,s=0){let o=map.data[t][e];5!=o&&6!=o||(s=i/2);let n=t*i+s;return this.pos.y+this.hitbox.p2.y>n&&this.old.y+this.hitbox.p2.y<=n&&(5==o||6==o?"Player"==this.__proto__.constructor.name&&(Game_Over=!0):(this.jumpForce=27==o?7.5:5.2,this.vel.y=0,this.pos.y=this.old.y=n-this.hitbox.p2.y-.01,this.bottom=!0),!0)}collideBottom(t,e,i=0){let s=t*e+e+i;return this.pos.y+this.hitbox.p1.y<s&&this.old.y+this.hitbox.p1.y>=s&&(this.vel.y=0,this.pos.y=s-this.hitbox.p1.y+.01,!0)}collideLeft(t,e,i){let s=t*e,o=i*map.tile.h;return this.pos.x+this.hitbox.p2.x>s&&this.old.x+this.hitbox.p2.x<=s&&this.pos.y+this.hitbox.p2.y>o&&(this.vel.x=0,this.pos.x=s-this.hitbox.p2.x-.01,!0)}collideRight(t,e){let i=t*e+e;return this.pos.x+this.hitbox.p1.x<i&&this.old.x+this.hitbox.p1.x>=i&&(this.vel.x=0,this.pos.x=i-this.hitbox.p1.x+.01,!0)}1(t,e,i,s){map.data[e][t];this.collideTop(e,t,s)}2(t,e,i,s){this.collideRight(t,i)}3(t,e,i,s){this.collideBottom(e,s)}4(t,e,i,s){this.collideLeft(t,i,e)}5(t,e,i,s){this.collideTop(e,t,s)||this.collideRight(t,i)}6(t,e,i,s){this.collideTop(e,t,s)||this.collideLeft(t,i,e)}7(t,e,i,s){this.collideBottom(e,s)||this.collideRight(t,i)}8(t,e,i,s){this.collideBottom(e,s)||this.collideLeft(t,i,e)}9(t,e,i,s){this.collideTop(e,t,s)||this.collideLeft(t,i,e)||this.collideRight(t,i)||this.collideBottom(e,s)}10(t,e,i,s){this.collideTop(e,t,s)||this.collideBottom(e,s)}11(t,e,i,s){this.collideLeft(t,i,e)||this.collideRight(t,i)}12(t,e,i,s){this.collideTop(e,t,s)||this.collideLeft(t,i,e)||this.collideRight(t,i)}13(t,e,i,s){this.collideLeft(t,i,e)||this.collideRight(t,i)||this.collideBottom(e,s)}14(t,e,i,s){this.collideTop(e,t,s)||this.collideLeft(t,i,e)||this.collideBottom(e,s)}15(t,e,i,s){this.collideTop(e,t,s)||this.collideRight(t,i)||this.collideBottom(e,s)}handleCollision(t,e,i){let s,o,n,h=this.hitbox.p1.x,l=this.hitbox.p1.y,a=this.hitbox.p2.x-h,r=this.hitbox.p2.y-l;s=Math.floor((this.pos.x+h)/t),o=Math.floor((this.pos.y+l)/e),n=null!=o?i[o][s]:void 0,0!=n&&null!=n&&this[n](s,o,t,e),s=Math.floor((this.pos.x+h+a)/t),n=null!=o?i[o][s]:void 0,0!=n&&null!=n&&this[n](s,o,t,e),s=Math.floor((this.pos.x+h)/t),o=Math.floor((this.pos.y+l+r)/e),n=null!=o?i[o][s]:void 0,0!=n&&null!=n&&this[n](s,o,t,e),s=Math.floor((this.pos.x+h+a)/t),n=null!=o?i[o][s]:void 0,0!=n&&null!=n&&this[n](s,o,t,e),s=Math.floor((this.pos.x+h)/t),o=Math.floor((this.pos.y+l)/e),n=null!=o?i[o][s]:void 0,0!=n&&null!=n&&this[n](s,o,t,e),o=Math.floor((this.pos.y+l+r)/e),n=null!=o?i[o][s]:void 0,0!=n&&null!=n&&this[n](s,o,t,e),s=Math.floor((this.pos.x+h+a)/t),o=Math.floor((this.pos.y+l)/e),n=null!=o?i[o][s]:void 0,0!=n&&null!=n&&this[n](s,o,t,e),o=Math.floor((this.pos.y+l+r)/e),n=null!=o?i[o][s]:void 0,0!=n&&null!=n&&this[n](s,o,t,e)}}class Player extends Mover{constructor(t,e,i,s,o,n,h,l,a){super(t,e,i,s,o,n,h,l,a),this.speed=3,this.g=.2,this.friction=.1,this.jumpForce=5.2,this.controls={left:!1,right:!1,jump:!1},this.bottom=!1,this.falling=!1}stateHandler(t){this.controls.left?this.orientation=-1:this.controls.right&&(this.orientation=1),!this.bottom||this.falling?(this.anim.currentIndex=0,this.anim.currentState="jump",this.animation()):this.controls.left||this.controls.right||!this.bottom||this.falling?(this.controls.left||this.controls.right)&&this.bottom&&!this.falling&&"run"!=this.anim.currentState&&(this.anim.currentIndex=0,this.anim.currentState="run",this.animation()):(this.anim.currentIndex=0,this.anim.currentState="idle",this.animation())}movement(){if(this.controls.left?this.vel.x=-this.speed:this.controls.right&&(this.vel.x=this.speed),this.controls.jump&&this.bottom){this.vel.y=-this.jumpForce;try{assets.get("jumpSound").play()}catch{}this.bottom=!1}}update(t){this.stateHandler(t),this.animationHandler(t),this.movement(),this.updateOldPos(),this.wallCollision(),this.vel.y+=this.g,this.vel.x*=1-this.friction,this.pos=this.pos.add(this.vel.mult(t)),this.vel.y>this.g?this.falling=!0:this.falling=!1,this.handleCollision(tw,th,collisionMap),this.draw()}}class Enemy extends Mover{constructor(t,e,i,s,o,n,h,l,a){super(t,e,i,s,o,n,h,l,a),this.g=.2,this.falling=!1}update(t){this.stateHandler(t),this.animationHandler(t),this.updateOldPos(),this.wallCollision(),this.vel.y+=this.g,this.pos=this.pos.add(this.vel),this.vel.y>this.g?this.falling=!0:this.falling=!1,this.handleCollision(tw,th,collisionMap),this.draw(),null!=this.startPoint&&null!=this.endPoint&&(this.pos.x+this.hitbox.p1.x<=this.startPoint?this.vel.x=this.speed:this.pos.x+this.hitbox.p2.x>=this.endPoint&&(this.vel.x=-this.speed))}}class Slime extends Enemy{constructor(t,e,i,s,o,n,h,l,a,r,c,d){super(t,e,i,s,o,n,h,l,a),this.startPoint=r,this.endPoint=c,this.speed=d}stateHandler(){this.vel.x>0?this.orientation=1:this.vel.x<0&&(this.orientation=-1),0==this.vel.x&&this.bottom&&!this.falling?(this.anim.currentIndex=0,this.anim.currentState="idle",this.animation()):(this.vel.x>0||this.vel.x<0)&&this.bottom&&!this.falling&&"run"!=this.anim.currentState&&(this.anim.currentIndex=0,this.anim.currentState="run",this.animation())}}class Bat extends Enemy{constructor(t,e,i,s,o,n,h,l,a,r,c,d){super(t,e,i,s,o,n,h,l,a),this.startPoint=r,this.endPoint=c,this.speed=d,this.g=0}stateHandler(){this.vel.x>0?this.orientation=1:this.vel.x<0&&(this.orientation=-1),0==this.vel.x?(this.anim.currentIndex=0,this.anim.currentState="idle",this.animation()):0!=this.vel.x&&"run"!=this.anim.currentState&&(this.anim.currentIndex=0,this.anim.currentState="run",this.animation())}}class Dragon extends Enemy{constructor(t,e,i,s,o,n,h,l,a){super(t,e,i,s,o,n,h,l,a),this.timeToNextFireball=3500,this.timer=this.timeToNextFireball}stateHandler(t){player.pos.x+player.hitbox.p2.x<this.pos.x+this.hitbox.p1.x?this.orientation=-1:this.orientation=1,this.anim.currentState="idle",this.createFireball(t)}createFireball(t){this.timer+=t,this.timer>this.timeToNextFireball&&(this.anim.currentState="firing",this.anim.currentIndex=0,this.animation(),createFireball(this.pos.x+this.hitbox.p1.x,this.pos.y,this.orientation),this.timer=0)}}class Fireball extends Sprite{constructor(t,e,i,s,o,n,h,l,a){super(t,e,i,s,o,n,h,l),this.orientation=a,this.speed=3.5,this.old=new Vector(0,0),this.vel=new Vector(0,0),this.tileCollided=!1}tileCollision(t,e,i){if(this.vel.x<0){let s=Math.floor((this.pos.x+this.hitbox.p1.x)/t);if(0!=i[Math.floor((this.pos.y+this.hitbox.p1.y)/e)][s]){let e=(s+1)*t;this.pos.x+this.hitbox.p1.x<e&&this.old.x+this.hitbox.p1.x>=e&&(this.tileCollided=!0,this.pos.x=e-this.hitbox.p1.x+.001,this.vel.x=0)}}else if(this.vel.x>0){let s=Math.floor((this.pos.x+this.hitbox.p2.x)/t);if(0!=i[Math.floor((this.pos.y+this.hitbox.p1.y)/e)][s]){let e=s*t;this.pos.x+this.hitbox.p2.x>e&&this.old.x+this.hitbox.p2.x<=e&&(this.tileCollided=!0,this.pos.x=e-this.hitbox.p2.x-.01,this.vel.x=0)}}}stateHandler(){this.tileCollided?(this.anim.currentState="blast",this.currentIndex=0,this.animation()):this.anim.currentState="fire"}update(t){this.old=this.pos,this.pos=this.pos.add(this.vel),this.tileCollision(map.tile.w,map.tile.h,map.collMap),1==this.orientation?this.vel.x=this.speed:-1==this.orientation&&(this.vel.x=-this.speed),this.stateHandler(),this.animationHandler(t),this.draw()}}const rand=(t,e)=>Math.random()*(e-t)+t;function createFireball(t,e,i){fireballs.push(new Fireball(new Vector(t,e),32,32,{p1:new Vector(10,14),p2:new Vector(24,22)},assets.get("items"),{fire:[9,10,11,10],blast:[12],dur:150,elapsedTime:0,currentState:"fire",currentFrame:9,currentIndex:0},4,4,i))}function createDragon(t,e){return new Dragon(new Vector(t,e),32,32,new Vector(0,0),{p1:new Vector(6,8),p2:new Vector(28,32)},assets.get("enemies"),{idle:[5,6,7,6],firing:[8],dur:200,elapsedTime:0,currentState:"idle",currentFrame:5,currentIndex:0},4,3)}function createSlime(t,e,i,s){let o;return o=Math.random()<.5?s:-s,new Slime(new Vector(rand(t,e),i),32,32,new Vector(o,0),{p1:new Vector(6,8),p2:new Vector(28,32)},assets.get("enemies"),{idle:[1],run:[2,3,2,1],dur:300,elapsedTime:0,currentState:"idle",currentFrame:1,currentIndex:0},4,3,t,e,s)}function createBat(t,e,i,s,o){let n;return null==o&&(o=rand(t,e)),n=Math.random()<.5?s:-s,new Bat(new Vector(o,i),32,32,new Vector(n,0),{p1:new Vector(10,10),p2:new Vector(26,26)},assets.get("enemies"),{idle:[9],run:[9,10,11,10],dur:300,elapsedTime:0,currentState:"idle",currentFrame:1,currentIndex:0},4,3,t,e,s)}function checkAABBCollision(t,e){return t.pos.x+t.hitbox.p2.x>e.pos.x+e.hitbox.p1.x&&t.pos.x+t.hitbox.p1.x<e.pos.x+e.hitbox.p2.x&&t.pos.y+t.hitbox.p2.y>e.pos.y+e.hitbox.p1.y&&t.pos.y+t.hitbox.p1.y<e.pos.y+e.hitbox.p2.y}function main(){assets.get("bgMusic").play(),assets.get("bgMusic").loop=!0,Game_Over=!1,camera=new Camera(0,900),map=new Tilemap({w:32,h:32},assets.get("tilemap").data,assets.get("tileset"),{row:5,column:11}),map.init(),tw=map.tile.w,th=map.tile.h,mc=map.data[0].length,mr=map.data.length,collisionMap=map.collMap,player=new Player(new Vector(128,1120),32,32,new Vector(0,0),{p1:new Vector(8,7),p2:new Vector(26,32)},assets.get("player"),{idle:[6],run:[1,2,3,2],jump:[5],dur:200,elapsedTime:0,currentState:"idle",currentFrame:6,currentIndex:0},4,2),fireballs=[],enemiesArray=[],enemiesArray.push(createSlime(352.01,639.99,1300,1),createSlime(192.01,415.99,640,1),createSlime(224.01,1151.99,63.99,2,224.01),createSlime(224.01,1151.99,63.99,2,1151.99),createBat(832.01,1183.99,1376,2),createBat(768.01,1151.99,704,1.5,768.01),createBat(768.01,1151.99,704,1.5,1151.99),createBat(.01,223.99,224,1.5,.01),createBat(.01,287.99,352,1.5,287.99),createDragon(1248.01,1055.99),createDragon(1284.01,1343.99),createDragon(1152.01,63.99)),win={x:48*map.tile.w,y:0*map.tile.h,w:2*map.tile.w,h:map.tile.h},gameLoop()}function Game_Over_Screen(t=!1){document.getElementById("gameOverScreen").style.pointerEvents="all",document.getElementById("gameOverScreen").style.display="grid",t?(document.getElementById("got").innerHTML="You won!",document.getElementById("restart").innerHTML="Play again"):(document.getElementById("got").innerHTML="Game Over!",document.getElementById("restart").innerHTML="Resart")}function Game_Over_Handler(t=!1){cancelAnimationFrame(animID),assets.get("bgMusic").pause(),document.getElementById("controller").style.display="none",t?(document.getElementById("gameOverScreen").classList.add("wonScreen"),document.getElementById("gameOverScreen").classList.remove("gameOverScreen")):(document.getElementById("gameOverScreen").classList.remove("wonScreen"),document.getElementById("gameOverScreen").classList.add("gameOverScreen")),Game_Over_Screen(t)}document.getElementById("restart").addEventListener("click",(()=>{document.getElementById("gameOverScreen").style.display="none",document.getElementById("gameOverScreen").style.pointerEvents="none",document.getElementById("controller").style.display="block",main()}));let animID,now,dt,j,then=performance.now(),devMode=!1;function gameLoop(){now=performance.now(),dt=now-then,document.getElementById("fps").innerHTML=Math.floor(1e3/dt),then=now,animID=requestAnimationFrame(gameLoop),ctx.clearRect(0,0,canvas.width,canvas.height),ctx.fillStyle="#000",ctx.fillRect(0,0,canvas.width,canvas.height),ctx.imageSmoothingEnabled=!1,homeScreen?homeBg.update():(devMode&&(Game_Over=!1,j&&(player.bottom=!0)),Game_Over&&Game_Over_Handler(),player.pos.x+player.hitbox.p2.x>win.x&&player.pos.x+player.hitbox.p1.x<win.x+win.w&&player.pos.y+player.hitbox.p2.y>win.y&&player.pos.y+player.hitbox.p1.y<win.y+win.h&&Game_Over_Handler(!0),camera.follow(player,new Vector(canvas.width/2,canvas.height/2)),ctx.save(),ctx.translate(camera.offSet.x-camera.pos.x,camera.offSet.y-camera.pos.y),map.update(),fireballs.forEach(((t,e)=>{t.tileCollided&&fireballs.splice(e,1),t.update(dt),checkAABBCollision(player,t)&&(Game_Over=!0)})),enemiesArray.forEach((t=>{t.update(dt),checkAABBCollision(player,t)&&(Game_Over=!0)})),player.update(dt),ctx.restore(),camera.update(player))}function resizeGameScreen(t){canvas.width=innerWidth,canvas.height=innerHeight}addEventListener("resize",resizeGameScreen),addEventListener("keydown",(t=>{let e=t.keyCode,i=t.key;37==e||65==e?player.controls.left=!0:39!=e&&68!=e||(player.controls.right=!0),38!=e&&87!=e||(player.controls.jump=!0),"p"==i&&(devMode=!devMode),"j"==i&&(j=!j)})),addEventListener("keyup",(t=>{let e=t.keyCode;37==e||65==e?player.controls.left=!1:39!=e&&68!=e||(player.controls.right=!1),38!=e&&87!=e||(player.controls.jump=!1)})),document.getElementById("left-btn").addEventListener("touchstart",(()=>{player.controls.left=!0})),document.getElementById("left-btn").addEventListener("touchend",(()=>{player.controls.left=!1})),document.getElementById("right-btn").addEventListener("touchstart",(()=>{player.controls.right=!0})),document.getElementById("right-btn").addEventListener("touchend",(()=>{player.controls.right=!1})),document.getElementById("jump-btn").addEventListener("touchstart",(()=>{player.controls.jump=!0})),document.getElementById("jump-btn").addEventListener("touchend",(()=>{player.controls.jump=!1}));
